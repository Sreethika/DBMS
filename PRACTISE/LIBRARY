REFER TO LIBRARY.PNG WHILE READING THE QUERIES
TO RUN THE QUERIES, GO TO DBMS/LIBRARY/ AND REFER Postgre-SQL-dump

-- 1. Authors with first name as a single character
SELECT author_fname, author_lname
FROM book_authors
WHERE length(author_fname) = 1;

-- 2. Titles & publishers of books not in year 2015/2017
SELECT title, publisher
FROM book_catalogue
WHERE year NOT IN (2015, 2017);

-- 3. Students with birthday in May 2002 or May 2003
SELECT student_fname, student_lname
FROM students
WHERE (EXTRACT(MONTH FROM dob) = 5 AND EXTRACT(YEAR FROM dob) IN (2002, 2003));

-- 4. Total number of UG members
SELECT COUNT(*) AS total_member
FROM members
WHERE member_type = 'UG';

-- 5. Female students count in each department
SELECT department_code, COUNT(*) AS female_count
FROM students
WHERE gender = 'F'
GROUP BY department_code;

-- 6. Department name where Gita Das is studying
SELECT d.department_name
FROM students s
JOIN departments d ON s.department_code = d.department_code
WHERE s.student_fname = 'Gita' AND s.student_lname = 'Das';

-- 7. Roll numbers of male students in Block_2
SELECT s.roll_no
FROM students s
JOIN departments d ON s.department_code = d.department_code
WHERE s.gender = 'M' AND d.department_building = 'Block_2';

-- 8. Names & roll numbers of students in Block_1
SELECT s.student_fname, s.student_lname, s.roll_no
FROM students s
JOIN departments d ON s.department_code = d.department_code
WHERE d.department_building = 'Block_1';

-- 9. Staff with mobile ending in '56'
SELECT staff_fname, staff_lname, gender
FROM staff
WHERE CAST(mobile_no AS TEXT) LIKE '%56';

-- 10. Natural join students & departments
SELECT *
FROM students NATURAL JOIN departments;

-- 11. Members who have not issued any books
SELECT *
FROM members m
WHERE NOT EXISTS (
    SELECT 1 FROM book_issue bi WHERE bi.member_no = m.member_no
);

-- 12. Dates when "Learning with Python" issued
SELECT DISTINCT bi.doi
FROM book_issue bi
JOIN book_copies bc ON bi.accession_no = bc.accession_no
JOIN book_catalogue c ON bc.isbn_no = c.isbn_no
WHERE c.title = 'Learning with Python';

-- 13. Research Scholars (RS) who never issued books
SELECT *
FROM members m
WHERE member_type = 'RS'
AND NOT EXISTS (SELECT 1 FROM book_issue bi WHERE bi.member_no = m.member_no);

-- 14. If multiple "Gita Das" existed (ambiguous case)
SELECT d.department_name
FROM students s
JOIN departments d ON s.department_code = d.department_code
WHERE s.student_fname = 'Gita' AND s.student_lname = 'Das'
LIMIT 1;
